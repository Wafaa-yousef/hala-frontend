{"ast":null,"code":"import{useEffect,useState}from'react';import axios from'axios';import{io}from'socket.io-client';import{LineChart,Line,XAxis,YAxis,CartesianGrid,Tooltip,Legend,ResponsiveContainer}from'recharts';import\"./adminTrends.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const socket=io(process.env.NODE_ENV===\"development\"?\"http://localhost:5000\":`${process.env.REACT_APP_API_URL}`);export default function AdminTrends(){const[chartData,setChartData]=useState([]);const[warehouses,setWarehouses]=useState([]);useEffect(()=>{let isMounted=true;const fetchTrends=()=>{axios.get(`${process.env.REACT_APP_API_URL}/api/admin/trends`).then(res=>{if(!isMounted)return;const raw=res.data;const weekSet=new Set();raw.forEach(w=>w.trend.forEach(t=>weekSet.add(t.week)));const weeks=Array.from(weekSet).sort();const formatted=weeks.map(week=>({week}));raw.forEach(w=>{const warehouseName=w.warehouse;w.trend.forEach(_ref=>{let{week,utilization}=_ref;const weekRow=formatted.find(f=>f.week===week);if(weekRow){weekRow[warehouseName]=Math.round(utilization*10000)/100;}});});setChartData(formatted);setWarehouses(raw.map(w=>w.warehouse));}).catch(err=>{if(isMounted){console.error('Error fetching admin trends',err);}});};fetchTrends();socket.on('excel-updated',()=>{console.log('Socket event: excel-updated received, refetching...');fetchTrends();});return()=>{isMounted=false;socket.off('excel-updated');};},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"chartContainer\",style:{color:\"white\"},children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uD83D\\uDCC8 Admin Trends (Utilization % by Week)\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:350,children:/*#__PURE__*/_jsxs(LineChart,{data:chartData,children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"week\"}),/*#__PURE__*/_jsx(YAxis,{domain:[0,100],unit:\"%\"}),/*#__PURE__*/_jsx(Tooltip,{formatter:v=>`${v}%`}),/*#__PURE__*/_jsx(Legend,{}),warehouses.map((name,i)=>/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:name,stroke:['#e20ed8ff','#8b740bff','#f57710ff','#f71647ff','#129b82ff','#33f84dff','#1386bbff'][i%7],dot:false},name))]})})]});}","map":{"version":3,"names":["useEffect","useState","axios","io","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","jsx","_jsx","jsxs","_jsxs","socket","process","env","NODE_ENV","REACT_APP_API_URL","AdminTrends","chartData","setChartData","warehouses","setWarehouses","isMounted","fetchTrends","get","then","res","raw","data","weekSet","Set","forEach","w","trend","t","add","week","weeks","Array","from","sort","formatted","map","warehouseName","warehouse","_ref","utilization","weekRow","find","f","Math","round","catch","err","console","error","on","log","off","className","style","color","children","width","height","strokeDasharray","dataKey","domain","unit","formatter","v","name","i","type","stroke","dot"],"sources":["C:/Users/ALAMEEN/Desktop/new-frontend/hala-frontend/src/components/adminTrends/AdminTrends.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { io } from 'socket.io-client';\r\n\r\nimport {\r\n  LineChart, Line, XAxis, YAxis, CartesianGrid,\r\n  Tooltip, Legend, ResponsiveContainer\r\n} from 'recharts';\r\nimport \"./adminTrends.css\"\r\nconst socket = io( process.env.NODE_ENV === \"development\"\r\n    ? \"http://localhost:5000\"\r\n    : `${process.env.REACT_APP_API_URL}`);\r\nexport default function AdminTrends() {\r\n  const [chartData, setChartData] = useState([]);\r\n  const [warehouses, setWarehouses] = useState([]);\r\n  \r\n\r\n  \r\n  useEffect(() => {\r\n  let isMounted = true;\r\n\r\n  const fetchTrends = () => {\r\n    axios.get(`${process.env.REACT_APP_API_URL}/api/admin/trends`)\r\n      .then(res => {\r\n        if (!isMounted) return;\r\n\r\n        const raw = res.data;\r\n\r\n        const weekSet = new Set();\r\n        raw.forEach(w => w.trend.forEach(t => weekSet.add(t.week)));\r\n        const weeks = Array.from(weekSet).sort();\r\n\r\n        const formatted = weeks.map(week => ({ week }));\r\n\r\n        raw.forEach(w => {\r\n          const warehouseName = w.warehouse;\r\n\r\n          w.trend.forEach(({ week, utilization }) => {\r\n            const weekRow = formatted.find(f => f.week === week);\r\n            if (weekRow) {\r\n              weekRow[warehouseName] = Math.round(utilization * 10000) / 100;\r\n            }\r\n          });\r\n        });\r\n\r\n        setChartData(formatted);\r\n        setWarehouses(raw.map(w => w.warehouse));\r\n      })\r\n      .catch(err => {\r\n        if (isMounted) {\r\n          console.error('Error fetching admin trends', err);\r\n        }\r\n      });\r\n  };\r\n\r\n  fetchTrends(); \r\n\r\n  \r\n  socket.on('excel-updated', () => {\r\n    console.log('Socket event: excel-updated received, refetching...');\r\n    fetchTrends();\r\n  });\r\n\r\n  return () => {\r\n    isMounted = false;\r\n    socket.off('excel-updated');\r\n  };\r\n}, []);\r\n\r\n\r\n  return (\r\n    <div className='chartContainer' style={{color:\"white\"}}>\r\n      <h2>ðŸ“ˆ Admin Trends (Utilization % by Week)</h2>\r\n      <ResponsiveContainer width=\"100%\" height={350}>\r\n        <LineChart data={chartData}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" /> \r\n          <XAxis dataKey=\"week\" />\r\n          <YAxis domain={[0, 100]} unit=\"%\" />\r\n          <Tooltip formatter={(v) => `${v}%`} />\r\n          <Legend />\r\n          {warehouses.map((name, i) => (\r\n            <Line\r\n              key={name}\r\n              type=\"monotone\"\r\n              dataKey={name}\r\n              stroke={['#e20ed8ff', '#8b740bff', '#f57710ff', '#f71647ff', '#129b82ff','#33f84dff','#1386bbff'][i % 7]}\r\n              dot={false}\r\n            />\r\n          ))}\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}