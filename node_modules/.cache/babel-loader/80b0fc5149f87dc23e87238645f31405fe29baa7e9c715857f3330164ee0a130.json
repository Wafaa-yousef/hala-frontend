{"ast":null,"code":"import{useEffect,useState}from\"react\";import axios from\"axios\";import{io}from\"socket.io-client\";import{BarChart,Bar,XAxis,YAxis,Tooltip,CartesianGrid,ResponsiveContainer,Cell}from\"recharts\";import\"./utilizationChart.css\";import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";const socket=io(process.env.NODE_ENV===\"development\"?\"http://localhost:5000\":`${process.env.REACT_APP_API_URL}`);const UtilizationChart=()=>{const[chartData,setChartData]=useState([]);const[week,setWeek]=useState(null);const[loading,setLoading]=useState(true);useEffect(()=>{let isMounted=true;async function fetchUtilization(){try{const response=await axios.get(`${process.env.REACT_APP_API_URL}/api/customer/latestUtilizationData`);const result=response.data;if(isMounted&&Array.isArray(result)){var _result$;const formatted=result.map(item=>({name:item.warehouse,utilization:Math.round(item.totalUtilization*100)// assuming already in percent form like 87.5\n}));setWeek(((_result$=result[0])===null||_result$===void 0?void 0:_result$.week)||null);setChartData(formatted);setLoading(false);}}catch(error){if(isMounted){console.error(\"Error fetching utilization data:\",error);setLoading(false);}}}fetchUtilization();socket.on(\"excel-updated\",()=>{console.log(\"Socket event: excel-updated received, refetching utilization data...\");fetchUtilization();});return()=>{isMounted=false;socket.off(\"excel-updated\");};},[]);const COLORS=['#8884d8','#82ca9d','#ffc658','#ff7f50','#8dd1e1','#a4de6c','#d0ed57'];return/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-container\",children:[/*#__PURE__*/_jsxs(\"h2\",{className:\"dashboard-title\",children:[\"\\uD83D\\uDCCA Weekly Utilization \",week&&`â€“ Week ${week}`]}),loading?/*#__PURE__*/_jsx(\"p\",{children:\"Loading...\"}):/*#__PURE__*/_jsx(\"div\",{className:\"dashboard-chart\",children:/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:400,children:/*#__PURE__*/_jsxs(BarChart,{data:chartData,margin:{top:20,right:30,left:10,bottom:5},children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"name\"}),/*#__PURE__*/_jsx(YAxis,{domain:[0,100],tickFormatter:value=>`${value}%`}),/*#__PURE__*/_jsx(Tooltip,{formatter:value=>`${value}%`}),/*#__PURE__*/_jsx(Bar,{dataKey:\"utilization\",barSize:50,children:chartData.map((entry,index)=>/*#__PURE__*/_jsx(Cell,{fill:COLORS[index%COLORS.length]},`cell-${index}`))})]})})})]});};export default UtilizationChart;","map":{"version":3,"names":["useEffect","useState","axios","io","BarChart","Bar","XAxis","YAxis","Tooltip","CartesianGrid","ResponsiveContainer","Cell","jsxs","_jsxs","jsx","_jsx","socket","process","env","NODE_ENV","REACT_APP_API_URL","UtilizationChart","chartData","setChartData","week","setWeek","loading","setLoading","isMounted","fetchUtilization","response","get","result","data","Array","isArray","_result$","formatted","map","item","name","warehouse","utilization","Math","round","totalUtilization","error","console","on","log","off","COLORS","className","children","width","height","margin","top","right","left","bottom","strokeDasharray","dataKey","domain","tickFormatter","value","formatter","barSize","entry","index","fill","length"],"sources":["C:/Users/ALAMEEN/Desktop/new-frontend/hala-frontend/src/components/utilizationChart/UtilizationChart.js"],"sourcesContent":["import  { useEffect, useState } from \"react\"; \r\nimport axios from \"axios\";\r\nimport { io } from \"socket.io-client\";\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip,\r\n  CartesianGrid,\r\n  ResponsiveContainer,\r\n  Cell\r\n} from \"recharts\";\r\nimport \"./utilizationChart.css\";\r\n\r\nconst socket = io( process.env.NODE_ENV === \"development\"\r\n    ? \"http://localhost:5000\"\r\n    : `${process.env.REACT_APP_API_URL}`);\r\n\r\nconst UtilizationChart = () => {\r\n  const [chartData, setChartData] = useState([]);\r\n  const [week, setWeek] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n\r\n    async function fetchUtilization() {\r\n      try {\r\n        const response = await axios.get(`${process.env.REACT_APP_API_URL}/api/customer/latestUtilizationData`);\r\n        const result = response.data;\r\n\r\n        if (isMounted && Array.isArray(result)) {\r\n          const formatted = result.map((item) => ({\r\n            name: item.warehouse,\r\n            utilization: Math.round(item.totalUtilization * 100), // assuming already in percent form like 87.5\r\n          }));\r\n\r\n          setWeek(result[0]?.week || null);\r\n          setChartData(formatted);\r\n          setLoading(false);\r\n        }\r\n      } catch (error) {\r\n        if (isMounted) {\r\n          console.error(\"Error fetching utilization data:\", error);\r\n          setLoading(false);\r\n        }\r\n      }\r\n    }\r\n\r\n    fetchUtilization(); \r\n\r\n    \r\n    socket.on(\"excel-updated\", () => {\r\n      console.log(\"Socket event: excel-updated received, refetching utilization data...\");\r\n      fetchUtilization();\r\n    });\r\n\r\n    return () => {\r\n      isMounted = false;          \r\n      socket.off(\"excel-updated\"); \r\n    };\r\n  }, []);\r\n\r\n  const COLORS = ['#8884d8', '#82ca9d', '#ffc658', '#ff7f50', '#8dd1e1', '#a4de6c', '#d0ed57'];\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <h2 className=\"dashboard-title\">ðŸ“Š Weekly Utilization {week && `â€“ Week ${week}`}</h2>\r\n\r\n      {loading ? (\r\n        <p>Loading...</p>\r\n      ) : (\r\n        <div className=\"dashboard-chart\">\r\n          <ResponsiveContainer width=\"100%\" height={400}>\r\n            <BarChart data={chartData} margin={{ top: 20, right: 30, left: 10, bottom: 5 }}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"name\" />\r\n              <YAxis domain={[0, 100]} tickFormatter={(value) => `${value}%`} />\r\n              <Tooltip formatter={(value) => `${value}%`} />\r\n              <Bar dataKey=\"utilization\" barSize={50}>\r\n                {chartData.map((entry, index) => (\r\n                  <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n                ))}\r\n              </Bar>\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UtilizationChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}